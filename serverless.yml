service: fib-trading-bot-sls

frameworkVersion: "3"

custom:
  currencyPairsTableName: CurrencyPairs

  analysisQueueUrl:
    Ref: AnalysePairQueue

  analysisQueueArn:
    Fn::GetAtt:
      - AnalysePairQueue
      - Arn

  pythonRequirements:
    dockerizePip: true
    zip: false

provider:
  name: aws
  profile: fib-trading-bot
  runtime: python3.11
  region: ap-southeast-1

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.currencyPairsTableName}

        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource: ${self:custom.analysisQueueArn}

  environment:
    CURRENCY_PAIRS_TABLE_NAME: ${self:custom.currencyPairsTableName}

package:
  patterns:
    - '!./.venv/**'
    - '!./venv/**'
    - '!./__pycache__/**'
    - '!./.DS_Store'
    - '!./versions/**'
    - '!./lambdas/doodle/**'
    - '!./README.md'
    - '!./node_modules/**'

functions:
  currencyPairTriggerer:
    handler: lambdas/currency_pair_triggerer.run
    events:
      - schedule:
          # Trigger every 4 hours, 5 mins after the start of the hour so that we have the previous candle has totally closed. Only during trading hours
          # Forex trading hours (start - Sunday 21:00 UTC | end - Friday 17:00 UTC)
          # EventBridge timing is in UTC
          rate: cron(5 1,5,9,13,17,21 ? * MON-FRI *)
          # update before running to enable the triggerer
          enabled: false
    environment:
      CURRENCY_PAIRS_TABLE_NAME: ${self:custom.currencyPairsTableName}
      FIB_ANALYSIS_LAMBDA_QUEUE_URL: ${self:custom.analysisQueueUrl}

  fibonacciAnalyser:
    handler: lambdas/fibonacci_analyser.run
    events:
      - sqs:
          arn: ${self:custom.analysisQueueArn}
    environment:
      CURRENCY_PAIRS_TABLE_NAME: ${self:custom.currencyPairsTableName}

resources:
  Resources:
    CurrencyPairs:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.currencyPairsTableName}
        AttributeDefinitions:
          - AttributeName: pair
            AttributeType: S
        KeySchema:
          - AttributeName: pair
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    AnalysePairQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: AnalysePairQueue

plugins:
  - serverless-python-requirements